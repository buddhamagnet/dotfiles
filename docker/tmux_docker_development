# This is my docker development script. It cds into the local repository, spins
# up two tabs to query running containers and stored images, and then runs
# a container that has my local repo (including binary) mounted.

tmux has-session -t drupal
if [ $? != 0 ]
then
  tmux new-session -s docker_dev -n BOOT2DOCKER -d
  # spin up boot2docker in your VM.
  tmux send-keys -t docker_dev 'boot2docker up' C-m
  # open a new window and boot docker environment.
  tmux new-window -n REPO -t docker_dev
  tmux send-keys -t docker_dev 'boot2docker shellinit' C-m
  # cd into the docker repo directory.
  tmux send-keys -t docker_dev 'cd /Users/buddhamagnet/Sites/golang/docker/docker' C-m
  # open a new window, boot docker environment and jump onto container.
  tmux new-window -n CONTAINER_SHELL -t docker_dev
  tmux send-keys -t docker_dev 'cd /Users/buddhamagnet/Sites/golang/docker/docker' C-m
  tmux send-keys -t docker_dev 'boot2docker shellinit' C-m
  tmux send-keys -t docker_dev 'docker run --privileged --rm -ti -v `pwd`:/go/src/github.com/docker/docker development /bin/bash' C-m
  tmux new-window -n PS -t docker_dev
  tmux send-keys -t docker_dev 'boot2docker shellinit' C-m
  tmux send-keys -t docker_dev 'cd /Users/buddhamagnet/Sites/golang/docker/docker' C-m
  tmux send-keys -t docker_dev 'docker ps' C-m
  tmux new-window -n IMAGES -t docker_dev
  tmux send-keys -t docker_dev 'boot2docker shellinit' C-m
  tmux send-keys -t docker_dev 'cd /Users/buddhamagnet/Sites/golang/docker/docker' C-m
  tmux send-keys -t docker_dev 'docker images' C-m
  tmux select-window -t docker_dev:0
fi
tmux attach -t docker_dev
